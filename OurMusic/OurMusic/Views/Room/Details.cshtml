@using OurMusic.Models
@model OurMusic.Models.Room

@{
    ViewBag.Title = "Details";
        
    String admin = ViewBag.Room.administrator.ToString();
    String id = ViewBag.Person.userID.ToString();
    String roomID = ViewBag.Room.roomid.ToString();
    String username = ViewBag.Person.userName.ToString();
    String firstName = ViewBag.Person.firstName.ToString();
    String lastName = ViewBag.Person.lastName.ToString();
}
<head>
    <title>Room</title>
    <!-- For testing-->
    <link href="~/Content/qunit-1.18.0.css" rel="stylesheet" />
</head>

@if (@admin == @id)
{
    <input type="hidden" id="isAdmin" value="admin" />
    @Html.ActionLink("DELETE ROOM", "Delete", "Room", new { id = ViewBag.Room.roomid }, new { })
}
else
{
    <input type="hidden" id="isAdmin" value="no" />
}
<input type="hidden" id="currentID" value="@id" />
<input type="hidden" id="adminID" value="@admin" />
<input type="hidden" id="firstName" value="@firstName" />
<input type="hidden" id="lastName" value="@lastName" />
<!--
<p>
    Current user is @id <br/>
    Room admin is @admin <br/>
    Room id is @roomID
</p>
-->

<div class="row">
    <center><h1 id="roomName">@Model.name</h1></center>
    <div class="col-lg-4">
        <h3>People</h3>
        <div class="panel panel-primary">
               <div class="panel-body" style="max-height: 300px; overflow-y: scroll;">  
                   <ul class="list-group" id="userList">
                        @foreach(var x in Model.People)
                        { 
                        <li id="@x.userID" class="list-group-item">@x.firstName @x.lastName
                        @if(Model.administrator == x.userID)
                        {
                            <i>(Administrator)</i>
                        }
                        else if (@admin == @id)
                        {
                            <span class="glyphicon glyphicon-remove removeUser" data-userID="@x.userID" style="float:right;color:red"></span>
                        }
                         </li>
                        }
                    </ul>
                </div>
        </div>
    </div>
    <div class="col-lg-8">
        <div id="player"></div>
    </div>
</div>

<div class="row">
    <div class="col-xs-6"></div>
    <div class="col-xs-6">
        <h3>Add Songs to Queue</h3>
        <ul class="list-group">
            @foreach (var x in Model.Songs)
            {
                <li class="list-group-item">@x.songId,@x.songURL</li>
            }
        </ul>
    </div>
</div>





<div>
    <div class="col-md-4"></div>
    <div class="col-md-4">
        <input type="text" id="searchQuery" placeholder="Enter Search Query Here" size="35" /><br />
        <button id="searchButton">Search Video</button><br />
        <font color="red" id="searchError"></font>
        <br />
    </div>
    <div class="col-md-4">
        <input type="text" id="vidTitle" placeholder="Video Title" size="35" disabled /><br />
        <input type="text" id="vidUrl" placeholder="Video URL" size="35" disabled />
        <input type="button" id="addVideo" value="Add To Queue" disabled /><br />
    </div>
        <div class="panel-body" style="max-height: 300px; overflow-y: scroll;">
            <table id="queueList" class="table">
                <thead id="tableHeader">
                    <tr id="titleRow">
                        <th>Video Title</th>
                        <th>Video URL</th>
                        <th>Votes</th>
                        <th>Upvote</th>
                        <th>Downvote</th>
                        @if (@admin == @id)
                        {
                            <th>Delete</th>
                        }
                    </tr>
                </thead>
                <tbody id="tbd"></tbody>
            </table>
        </div>
</div>
<h2>Room Chat</h2>
<div class="container">
    <input type="text" id="message" />
    <input type="button" id="sendmessage" value="Send" />
    <input type="hidden" id="displayname" />
    <ul id="discussion"></ul>
</div>

        <script src="/Scripts/jquery-2.1.3.min.js"></script>
        <script src="/Scripts/jquery.signalR-2.2.0.js"></script>
        <script src="/signalr/hubs"></script>
        <script src="/Scripts/room.js"></script>

        <script type="text/javascript">
            var tag = document.createElement('script');

            tag.src = "https://www.youtube.com/iframe_api";
            var firstScriptTag = document.getElementsByTagName('script')[0];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

            var player;
            var time;

            function onYouTubeIframeAPIReady() {
                player = new YT.Player('player', {
                    height: '390',
                    width: '640',
                    videoId: 'zjQlCbshk1A',
                    events: { 'onReady': onPlayerReady }
                });
            }

            function onPlayerReady(event) {
                event.target.playVideo(); // this is kept generic so the same callback can be used with any player object
            }

            //This is where the server-client code goes
            $(function () {
                var prox = $.connection.roomHub;


                var admin = document.getElementById(adminID).value;
                var id = document.getElementById(currentID).value;
                var guid = '@Model.name';

                function init() {
                    if (admin == id) {
                        time = player.getDuration();
                        prox.server.startInitCountDown(time, guid);
                    } else {
                        player.playVideo();
                    }
                }

                prox.client.change = function (video) {
                    player.loadVideoById(video);
                    if (admin == id) {
                        setTimeout(getTime, 2000);
                    }
                    document.getElementById("queueList").deleteRow(1);
                }

                function getTime() {
                    time = player.getDuration();
                    prox.server.countDown(time, guid);
                }

                $.connection.hub.start().done(init);
            });
        </script>


        <script>
            $('#searchButton').click(function search() {
                // Reset fields
                document.getElementById("vidUrl").value = "";
                document.getElementById("vidTitle").value = "";
                document.getElementById("searchError").innerHTML = "";
                document.getElementById("addVideo").disabled = true;

                // Load the query into the url
                var query = document.getElementById("searchQuery").value;

                if (query.length < 3 || query.length > 33) {
                    document.getElementById("searchError").innerHTML = "Search queries must be 3-32 characters long!";
                    return;
                }

                // requests JSON for query information
                var url = "https://www.googleapis.com/youtube/v3/search?videoEmbeddable=true&part=snippet&q=" + query + "&videoCaption=any&type=video&maxResults=1&key=AIzaSyAgKJngiP3aZa6HXQ8QnRMMgn83cy0UUK0";
                $.getJSON(url, function (data) {
                    // length > 0 means there is a result. == 0 means garbage
                    if (data.items.length > 0) {
                        document.getElementById("vidUrl").value = "" + data.items[0].id.videoId;
                        document.getElementById("vidTitle").value = "" + data.items[0].snippet.title;
                        document.getElementById("searchError").innerHTML = "";
                        document.getElementById("addVideo").disabled = false;
                    }
                    else {
                        document.getElementById("searchError").innerHTML = "No search result found!";
                    }
                });
            });
        </script>

        

        <!-- In browser search tests
        <div id="qunit"></div>
        <div id="qunit-fixture"></div>
        <script src="~/Scripts/qunit-1.18.0.js"></script>
        <script src="~/Scripts/searchtest.js"></script>
        <!--
        <script src="~/Scripts/queueTests.js"</script>
        -->


        <script>
            $(function () {
                //var chat = $.connection.charHub;
                var rHub = $.connection.roomHub;
                //var roomName =
                rHub.client.addNewMessageToPage = function (name, message) {
                    $('#discussion').append('<li><strong>' + htmlEncode(name)
                        + '</strong>: ' + htmlEncode(message) + '</li>');
                };
                $('#message').focus();
                $.connection.hub.start().done(function () {
                    $('#sendmessage').click(function () {
                        rHub.server.send('@username', $('#message').val(), document.getElementById("roomName").innerHTML);
                        $('#message').val('').focus();
                    });
                });
            });
            function htmlEncode(value) {
                var encodedValue = $('<div />').text(value).html();
                return encodedValue;
            }
        </script>
